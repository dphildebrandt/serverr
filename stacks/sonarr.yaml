services:
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges=true
    restart: unless-stopped
    volumes:
      - $DOCKER_DIR/app-data/sonarr:/config
      - $DOWNLOAD_DIR:/downloads
      - $MEDIA_DIR/tv:/tv
      - "/etc/localtime:/etc/localtime:ro"
      # Keep backups smaller/simpler. This data can be regenerated/redownloaded by Sonarr.
      - $DOCKER_DIR/temp/sonarr/MediaCover:/config/MediaCover
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - "traefik.enable=true"
      # HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.$DOMAIN_NAME`) && (Headers(`X-Api-Key`, `$SONARR_API_KEY`) || Query(`apikey`, `$SONARR_API_KEY`))"
      - "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      # HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$DOMAIN_NAME`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      # Middlewares
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file"
      - "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
      # Backup
      - "backup.stop"
